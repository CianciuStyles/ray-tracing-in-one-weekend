/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package io.github.cianciustyles

import java.io.File
import kotlin.random.Random

fun main() {
    // Image
    val aspectRatio = 16.0 / 9.0
    val imageWidth = 400
    val imageHeight = (imageWidth / aspectRatio).toInt()
    val samplesPerPixel = 100

    // World
    val world = HittableList()
    world.add(Sphere(Point3(0.0, 0.0, -1.0), 0.5))
    world.add(Sphere(Point3(0.0, -100.5, -1.0), 100.0))

    // Camera
    val camera = Camera()

    // Render
    File("image.ppm").bufferedWriter().use { image ->
        image.write("")
        image.write("P3\n")
        image.write("$imageWidth $imageHeight\n")
        image.write("255\n")

        for (j in (0 until imageHeight).reversed()) {
            System.err.println("Scanlines remaining: $j")

            for (i in 0 until imageWidth) {
                var pixelColor = Color(0.0, 0.0, 0.0)

                for (s in 0 until samplesPerPixel) {
                    val u = (i + Random.nextDouble()) / (imageWidth - 1)
                    val v = (j + Random.nextDouble()) / (imageHeight - 1)
                    val r = camera.getRay(u, v)
                    pixelColor += r.rayColor(world)
                }

                image.write("${pixelColor.writeColor(samplesPerPixel)}\n")
            }
        }
    }

    System.err.println("Done.")
}
